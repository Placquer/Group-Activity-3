# -*- coding: utf-8 -*-
"""GA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H6d0Se8hUoraDWTRki3MeZz52m7ZjEa2

# Group 7

Group 7
*   Christian Matthew Herrera
*   Marcus Bugaoan
*   Jann Daniel Fuensalida
"""

import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

# Set up the title and introduction for the Streamlit app
st.title('Electronic Sales Dashboard')
st.write("Group 7")
st.write("Christian Matthew Herrera - ")
st.write("Marcus Bugaoan - ")
st.write("Jann Daniel Fuensalida - 2020102613 - Placquer")          


# File uploader for the user to upload the CSV file
uploaded_file = st.file_uploader("Upload Electronic Sales CSV", type="csv")

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    
    # Display the dataframe
    st.write(df)

    """# Jann Daniel Fuensalida"""
    
    # Total Sales by Product Type
    df_product_sales = df.groupby('Product Type')['Total Price'].sum().reset_index()
    
    st.write("Total Sales by Product Type")
    fig, ax = plt.subplots()
    ax.bar(df_product_sales['Product Type'], df_product_sales['Total Price'])
    ax.set_title('Total Sales by Product Type')
    ax.set_xlabel('Product Type')
    ax.set_ylabel('Total Sales')
    st.pyplot(fig)

    st.write("""
    The bar chart illustrating total sales by product type reveals significant insights into customer preferences, indicating which product categories generate the most revenue. Certain product types outperform others, suggesting effective marketing strategies or successful product placement, like for example the amount of smartphones being sold. It tells us what products are popular in the market with a certain level of certainty, helping the seller make worthwhile decisions. Lower sales in specific areas may highlight opportunities for improvement or further analysis.
    """)

    # Create a new column with cleaned payment methods
    df['Payment Method (cleaned)'] = df['Payment Method'].str.lower().str.replace('paypal', 'PayPal')

    # Group the data by cleaned payment method and calculate the average order value
    payment_method_avg = df.groupby('Payment Method (cleaned)')['Total Price'].mean().reset_index()

    # Create a pie chart of the average order value by cleaned payment method
    fig2, ax2 = plt.subplots()
    ax2.pie(payment_method_avg['Total Price'], labels=payment_method_avg['Payment Method (cleaned)'], autopct='%1.1f%%', startangle=90)
    ax2.set_title('Proportion of Average Order Value by Payment Method')
    st.pyplot(fig2)

    st.write("""
    The pie chart above depicts the proportion of average order value by payment method, providing a clear picture of customer behavior regarding payment preferences. Each segment of the pie represents a different payment method, with sizes reflecting their respective average order values. This visualization underscores the importance of understanding preferred payment methods, as it can help tailor marketing strategies and enhance customer satisfaction by optimizing the payment experience.
    """)

    """# Marcus A, Bugaoan"""
    
    # Pie chart representing the percentage of completed products
    def pie_chart_completed_products():
        completed_orders = df[df['Order Status'] == 'Completed']
        order_status = completed_orders['Product Type'].value_counts()
        
        fig, ax = plt.subplots()
        ax.pie(order_status, labels=order_status.index, autopct='%1.1f%%')
        ax.set_title("Completed Deliveries of Each Product")
        st.pyplot(fig)

    pie_chart_completed_products()

    st.write("""
    This pie chart shows the percentage of each product which was completed and not canceled by the customer when ordering said product. Each segment of the pie comes from the total 67.2% completed orders (which is 13,432 out of 20,000) and is separated into each slice. This is insightful for sellers who want to make a quick profit by focusing on trending electronics.
    """)

    # Pie chart representing the percentage of completed payment methods
    def pie_chart_completed_methods():
        completed_orders = df[df['Order Status'] == 'Completed']
        order_status = completed_orders['Payment Method'].value_counts()
        
        fig, ax = plt.subplots()
        ax.pie(order_status.values, labels=order_status.index, autopct='%1.1f%%')
        ax.set_title('Completed Deliveries of Each Payment Method')
        st.pyplot(fig)

    pie_chart_completed_methods()

    st.write("""
    This pie chart shows the percentage of each payment method that was completed and not canceled by the customer when ordering a product. Each segment of the pie comes from the total of 67.2% completed orders (which is 13,432 out of 20,000). This is insightful for sellers, as it helps them understand which payment methods are more trusted by customers.
    """)





